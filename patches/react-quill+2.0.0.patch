diff --git a/node_modules/react-quill/lib/index.js b/node_modules/react-quill/lib/index.js
index 9b7eb6f..5997b62 100644
--- a/node_modules/react-quill/lib/index.js
+++ b/node_modules/react-quill/lib/index.js
@@ -4,7 +4,7 @@
 
 function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
 
-var _react = require('react');
+var _react = require('react'); /* eslint-disable-line no-unused-vars */
 
 var _react2 = _interopRequireDefault(_react);
 
@@ -53,7 +53,7 @@
 	// We can't update values that deep in props, so we use a state variable
 	// to hold the latest value.
 	this.state = {
-		value: this.isControlled() ? this.props.value : this.props.defaultValue
+		value: this.isControlled() ? this.props.value : this.props.defaultValue,
 	};
 };
 
@@ -141,7 +141,7 @@
 
 	getEditor: function getEditor() {
 		return this.editor;
-	},
+	}, // eslint-disable-line no-unused-vars
 
 	/*
  	Renders the editor in a restrictive way
@@ -211,7 +211,7 @@
 		}
 	},
 
-	render: function render() {
+	render: function render() { /* eslint-disable-line no-unused-vars */
 		return _react2['default'].createElement(
 			'div',
 			{ id: this.props.id,
@@ -220,7 +220,7 @@
 				ref: this.setEditorRef },
 			this.props.children
 		);
-	}
+	}, // eslint-disable-line no-unused-vars
 
 });
 
diff --git a/node_modules/react-quill/lib/mixin.js b/node_modules/react-quill/lib/mixin.js
index 9110190..34d4a8e 100644
--- a/node_modules/react-quill/lib/mixin.js
+++ b/node_modules/react-quill/lib/mixin.js
@@ -1,5 +1,6 @@
 'use strict';
 
+/* eslint-disable no-console */
 var ReactDOM = require('react-dom');
 var Quill = require('quill');
 
@@ -18,7 +19,10 @@
 	},
 
 	setEditorRef: function(element) {
-		this.editor = element;
+		// Store the editor element on the component instance
+		if (element) {
+			this.editor = element;
+		}
 	},
 
 	/*
@@ -37,7 +41,12 @@
 
 		// After the component has been mounted, we can create the editor
 		this.createEditor(
-			ReactDOM.findDOMNode(this.editor),
+			// Use a ref to get the DOM node instead of findDOMNode
+			this.editor,
 			this.getEditorConfig()
 		);
+	},
+
+	getEditorNode: function() {
+		return this.editor;
 	}
 };
